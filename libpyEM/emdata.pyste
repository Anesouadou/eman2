Include("transform.h")
Include("ctf.h")
Include("processor.h")
Include("aligner.h")
Include("cmp.h")
Include("emfft.h")
Include("xydata.h")

#EMData = Class("EMAN::EMData", "emdata.h")
EMData = Class("EMAN::EMData", "emdata_wrapitems.h")
add_method(EMData, "emdata_getitem")
rename(EMData.emdata_getitem, "__getitem__")
add_method(EMData, "emdata_setitem")
rename(EMData.emdata_setitem, "__setitem__")

set_policy(EMData.get_ctf, return_internal_reference())
set_policy(EMData.copy, return_value_policy(manage_new_object))
set_policy(EMData.get_clip, return_value_policy(manage_new_object))
set_policy(EMData.get_rotated_clip, return_value_policy(manage_new_object))
set_policy(EMData.get_top_half, return_value_policy(manage_new_object))
set_policy(EMData.do_fft, return_value_policy(manage_new_object))
set_policy(EMData.do_ift, return_value_policy(manage_new_object))
set_policy(EMData.do_fft_inplace, return_value_policy(reference_existing_object))
set_policy(EMData.do_ift_inplace, return_value_policy(reference_existing_object))
set_policy(EMData.pad_fft, return_value_policy(manage_new_object))
set_policy(EMData.window_center, return_value_policy(manage_new_object))
set_policy(EMData.get_fft_amplitude, return_value_policy(manage_new_object))
set_policy(EMData.get_fft_amplitude2D, return_value_policy(manage_new_object))
set_policy(EMData.get_fft_phase, return_value_policy(manage_new_object))
set_policy(EMData.rotavg, return_value_policy(manage_new_object))
set_policy(EMData.FourInterpol, return_value_policy(manage_new_object))
set_policy(EMData.rot_scale_conv, return_value_policy(manage_new_object))

set_policy(EMData.align, return_value_policy(manage_new_object))
set_policy(EMData.project, return_value_policy(manage_new_object))
set_policy(EMData.do_radon, return_value_policy(manage_new_object))
set_policy(EMData.vertical_acf, return_value_policy(manage_new_object))
set_policy(EMData.calc_ccf, return_value_policy(manage_new_object))
set_policy(EMData.make_rotational_footprint, return_value_policy(manage_new_object))
set_policy(EMData.make_footprint, return_value_policy(manage_new_object))
set_policy(EMData.calc_ccfx, return_value_policy(manage_new_object))
set_policy(EMData.unwrap, return_value_policy(manage_new_object))

set_policy(EMData.copy_head, return_value_policy(manage_new_object))
set_policy(EMData.little_big_dot, return_value_policy(manage_new_object))
set_policy(EMData.calc_mutual_correlation, return_value_policy(manage_new_object))
set_policy(EMData.calc_flcf, return_value_policy(manage_new_object))
set_policy(EMData.convolute, return_value_policy(manage_new_object))
set_policy(EMData.ift_slice, return_value_policy(manage_new_object))

set_policy(EMData.get_row, return_value_policy(manage_new_object))
set_policy(EMData.get_col, return_value_policy(manage_new_object))
set_policy(EMData.power, return_value_policy(manage_new_object))
set_policy(EMData.real, return_value_policy(manage_new_object))
set_policy(EMData.imag, return_value_policy(manage_new_object))
set_policy(EMData.real2complex, return_value_policy(manage_new_object))
set_policy(EMData.zeropad_ntimes, return_value_policy(manage_new_object))
set_policy(EMData.get_3dcviewptr, return_value_policy(reference_existing_object))
set_policy(EMData.symvol, return_value_policy(manage_new_object))
set_policy(EMData.rot_scale_trans2D, return_value_policy(manage_new_object))
set_policy(EMData.rot_trans2D, return_value_policy(manage_new_object))
set_policy(EMData.cmplx, return_value_policy(reference_existing_object))
set_policy(EMData.operator['()'], return_value_policy(copy_non_const_reference))

#rotconvtrunc2d = Template("EMAN::EMData::rotconvtrunc2d", "emdata.h")
#rotconvtrunc2d("EMAN::Util::KaiserBessel::kbi0_win")
#exclude(EMData.rotconvtrunc2d)
#exclude(EMData.getconvpt2d)
set_policy(EMData.rotconvtrunc2d_kbi0, return_value_policy(manage_new_object))
set_policy(EMData.gridrot2d_kbi0, return_value_policy(manage_new_object))
set_policy(EMData.fouriergridrot2d, return_value_policy(manage_new_object))
set_policy(EMData.extractplane, return_value_policy(manage_new_object))

set_policy(EMData.real2FH, return_value_policy(manage_new_object))
set_policy(EMData.FH2F, return_value_policy(manage_new_object))

exclude(EMData.get_data)
exclude(EMData.fft_slice)
exclude(EMData.render_amp24)
exclude(EMData.render_pha24)
exclude(EMData.setup4slice)
exclude(EMData.cmplx)

