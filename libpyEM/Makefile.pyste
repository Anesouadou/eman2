PYVER= $(shell python -c 'import sys; print sys.version' | head -n 1 | cut -c -3)
PYSTE = python /usr/bin/pyste.py -I../libEM -I/usr/include/python${PYVER}

all: libpyAligner2.cpp \
	 libpyAverager2.cpp \
	 libpyCmp2.cpp \
	 libpyProcessor2.cpp \
	 libpyFundamentals2.cpp \
	 libpyReconstructor2.cpp	\
	 libpyProjector2.cpp \
	 libpyGeometry2.cpp \
	 libpyEMObject2.cpp \
	 libpyEMData2.cpp \
	 libpyUtils2.cpp \
	 libpyPointArray2.cpp \
	 libpyTransform2.cpp \
	 libpyTypeConverter2.cpp \
	 libpyPolarData2.cpp	\
	 libpySparxUtil2.cpp

libpyGeometry2.cpp: geometry.pyste ../libEM/geometry.h
	rm -f libpyGeometry2.cpp
	$(PYSTE) --module=libpyGeometry2 geometry.pyste

libpyTransform2.cpp: transform.pyste ../libEM/transform.h ../libEM/vec3.h \
 ../libEM/quaternion.h 
	rm -f libpyTransform2.cpp
	$(PYSTE) --module=libpyTransform2 transform.pyste

libpyEMObject2.cpp: emobject.pyste ../libEM/exception.h ../libEM/emobject.h
	rm -f libpyEMObject2.cpp
	$(PYSTE) --module=libpyEMObject2 emobject.pyste

libpyEMData2.cpp: emdata.pyste ../libEM/emdata.h
	rm -f libpyEMData2.cpp
	$(PYSTE) --module=libpyEMData2  emdata.pyste

libpyUtils2.cpp: utils.pyste ../libEM/util.h ../libEM/emutil.h ../libEM/testutil.h
	rm -f libpyUtils2.cpp
	$(PYSTE) --module=libpyUtils2 utils.pyste
	sed -i -e 's/util_Crosrng_e)/util_Crosrng_e)\n        .staticmethod("Crosrng_e")/' libpyUtils2.cpp

libpyPointArray2.cpp: pointarray.pyste ../libEM/pointarray.h
	rm -f libpyPointArray2.cpp
	$(PYSTE) --module=libpyPointArray2 pointarray.pyste

libpyAligner2.cpp: aligner.pyste ../libEM/aligner.h  ../libEM/ctf.h ../libEM/imageio.h ../libEM/emobject.h
	rm -f libpyAligner2.cpp
	$(PYSTE) --module=libpyAligner2 aligner.pyste

libpyAverager2.cpp: averager.pyste ../libEM/averager.h ../libEM/emobject.h
	rm -f libpyAverager2.cpp
	$(PYSTE) --module=libpyAverager2 averager.pyste

libpyCmp2.cpp: cmp.pyste ../libEM/cmp.h ../libEM/log.h ../libEM/xydata.h  ../libEM/emobject.h
	rm -f libpyCmp2.cpp
	$(PYSTE) --module=libpyCmp2 cmp.pyste

libpyProcessor2.cpp: processor.pyste ../libEM/processor.h ../libEM/emobject.h
	rm -f libpyProcessor2.cpp
	$(PYSTE) --module=libpyProcessor2 processor.pyste

libpyFundamentals2.cpp: fundamentals.pyste ../libEM/sparx/fundamentals.h ../libEM/emdata.h
	rm -f libpyFundamentals2.cpp
	$(PYSTE) --module=libpyFundamentals2 fundamentals.pyste

libpyProjector2.cpp: projector.pyste ../libEM/projector.h ../libEM/emobject.h
	rm -f libpyProjector2.cpp
	$(PYSTE) --module=libpyProjector2 projector.pyste

libpyReconstructor2.cpp: reconstructor.pyste ../libEM/reconstructor.h ../libEM/emobject.h
	rm -f libpyReconstructor2.cpp
	$(PYSTE) --module=libpyReconstructor2 reconstructor.pyste

libpyTypeConverter2.cpp: typeconverter.pyste typeconverter.h
	rm -f libpyTypeConverter2.cpp
	$(PYSTE) --module=libpyTypeConverter2 typeconverter.pyste

libpyPolarData2.cpp: polardata.pyste ../libEM/polardata.h
	rm -f libpyPolarData2.cpp
	$(PYSTE) --module=libpyPolarData2 polardata.pyste
	
libpySparx2.cpp: sparxutil.pyste ../libEM/sparx/sparx_util.h
	rm -f libpySparxUtil2.cpp
	$(PYSTE) --module=libpySparx2.cpp sparxutil.pyste
	
