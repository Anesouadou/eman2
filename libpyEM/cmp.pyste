Include("emdata.h")
Include("transform.h")
Include("log.h")

Factory = Template("EMAN::Factory", "emobject.h")
Function("EMAN::dump_cmps", "cmp.h")
CmpFactory = Factory("EMAN::Cmp", "Cmps")
set_policy(CmpFactory.get, return_value_policy(manage_new_object))
exclude(CmpFactory.add)

Cmp = Class("EMAN::Cmp", "cmp.h")
rename(Cmp, "__Cmp")

Log = Class("EMAN::Log", "log.h")
set_policy(Log.logger, return_value_policy(reference_existing_object))
exclude(Log.variable)
exclude(Log.debug)
exclude(Log.warn)
exclude(Log.error)


XYData = Class("EMAN::XYData", "xydata.h")

