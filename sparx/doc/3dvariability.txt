= Name =
sx3dvariability - 3D Variability Estimation: Calculate 3D variability using a set of aligned projection images as an input.

= Usage =


''usage in command line''

sx3dvariability.py  prj_stack  --ave3D=ave3D  --var3D=var3D  --img_per_grp=img_per_grp  --sym=symmetry  --CTF  --fl=fl  --aa=aa  --symmetrize  --no_norm  --npad=npad  --VAR  --decimate  --window  --nvec  --VERBOSE  --ave2D=ave2D  --var2D=var2D  


=== Typical usage ===

sx3dvariability exists only in MPI version.

For asymmetric structure:

''' mpirun -np 64 sx3dvariability.py stack --ave3D=vol.hdf --var3D=var_vol.hdf --img_per_grp=100 --CTF --fl=0.25 --aa=0.1 '''

For structures that have symmetries:

''' sx3dvariability.py stack --sym=c2 --symmetrize ''' 

''' mpirun -np 64 sx3dvariability.py bdb:sdata --ave3D=vol.hdf --var3D=var_vol.hdf --img_per_grp=100 --sym=c2 --CTF --fl=0.25 --aaf=0.1 ''' 


== Input ==
    prj_stack:: Input image stack: The images must containt the 3D orientation parameters in the header and optionally CTF information. (default required string)

    ave3D:: Output 3D average: 3D reconstruction computed from projections averaged within respective angular neighbourhood. It should be used to assess the resolvability and possible artifacts of the variability map. (default none)
    var3D:: Output 3D variability: It creates a volume containing, for each voxel, a measure of the variability in the dataset. Careful, time consuming! (default none)

    img_per_grp:: Number of projections: Images from the angular neighbourhood that will be used to estimate 2D variance for each projection data. The larger the number the less noisy the estimate, but the lower the resolution. Usage of large number also results in rotational artifacts in variances that will be visible in 3D variability volume. (default 10)
    sym:: Point-group symmetry: Only required if the structure has symmetry higher than c1. Notice this step can be run with only one CPU and there is no MPI version for it. (default c1)
    CTF:: Use CTF: If set to true, the a CTF correction will be applied using the parameters found in the image headers. (default False) 
    fl:: Low-pass filter frequency [1/Pixel]: Filter to be applied to the images prior to variability calculation. Specify with absolute frequency. By default, no filtering. (default 0.0)
    aa:: Low-pass filter fall-off [1/Pixel]: Filter to be applied to the images prior to variability calculation. Specify with absolute frequency. By default, no filtering. (default 0.0) 
    symmetrize:: Symmetrise input stack: Please skip this preparation step if the structure is asymmetrical (i.e. c1), since it is required only when the structure has internal symmetry. (default False)

    * The remaining parameters are optional.
    no_norm:: Apply normalization: Indicate if normalization should be applied or not. By default, apply normalization. (default False question reversed in GUI)
    npad:: Image padding factor: The images are padded to achieve the original size times this option. (default 2)
    VAR:: Stack on input consists of 2D variances: (default False)
    decimate:: Image decimate factor: Reduce images by this factor and change the pixel size. Specify a value large than 1.0 to expand images, and less than 1.0 to shrink them. By default, it does not change size of images(default 1.0)
    window:: User smaller window size [Pixels]: Window (or clip) images using the specified size without changing pixel size. By default, use the original particle image size. (default 0)
    nvec:: Number of eigenvectors: By default, no PCA calculated. (default 0)
    VERBOSE:: Verbose: Useful for debugging. (default False)
    ave2D:: Output 2D averages: Useful for debugging. (default none)
    var2D:: Output 2D variances: Useful for debugging. (default none)


== Output ==
    At this point, the command does not create the output directory. Please use ave3D, var3D, ave2D, and/or var2D options to save output files in current directory. (2017/06/21 Toshio Moriya)


= Description =
The program calculates the variability observed in a collection of image projections. Structures with symmetry require preparing data before calculating the variability. The data preparation step would symmetrise the data and output a bdb:sdata for variability calculation. sx3dvariability.py can be slow.

= Method =

= Reference =

= Author / Maintainer =
Pawel Penczek

= Keywords =
 category 1:: APPLICATIONS

= Files =
sx3dvariability.py

= See also =

= Maturity =
 alpha::     it works.

= Bugs =
Did not discover any yet.
