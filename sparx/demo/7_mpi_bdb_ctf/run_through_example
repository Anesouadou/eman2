#!/bin/csh

set echo on


#cp ../fmodel_structure.hdf av_initio_vol.hdf

# Low-pass filtration of the initial structure
e2proc3d.py ab_initio_vol.hdf ab_initio_volf.hdf --filter=sxTANH_LOW_PASS:cutoff_abs=0.15:fall_off=0.2 || exit

# 2D alignment parameters are transformed to 3D alignment parameters
sxparams_2D_to_3D.py bdb:data || exit

# 3D projection alignment - refinement of the initial structure
mpirun -np 4 sxali3d_d.py bdb:data ab_initio_volf.hdf ali3d_d --ou=30 --xr='2.0 1.0 0.5' --ts='1.0 1 0.5' --delta='31 10 7' --an='-1 12 10' --maxit=2 --function=reference3 --CTF --MPI




 || exit

# Refinement of the 3D structure using high accuracy alignment
mpirun -np 4 sxali3d_e.py bdb:data ali3d_e --ou=30 --delta=8 --maxit=1 --chunk=0.25 --function=reference4 --MPI --CTF --debug || exit

# Renormalize the data
mpirun -np 4 sxnormal_prj.py bdb:data norma --r=24 --niter=3 --CTF --MPI || exit

#  The data is overwritten
sxnormal_prj.py bdb:data  bdb:data  --apply_weights=norma/weights.txt || exit

# bootstrap calculations
#  Calculate weights of projections to account for their uneven distribution
mpirun -np 4 sxbootstrap_calcwgts.py bdb:data wgts.txt --voronoi --MPI || exit

#  Generate buffer containing 2D projection data
sxbootstrap_genbuf.py bdb:data BUFFER --CTF || exit

# Calculate bootstrap volumes
mpirun -np 4 sxbootstrap_bigdisk.py bdb:data wgts.txt bootstrap BUFFER --nvol=100 --nbufvol=5 --seedbase=10000 --snr=1.0 --CTF --MPI || exit

# Compute real-space variance
mpirun -np 4 sxvar.py bootstrap/bsvol000*.hdf defvar --fl=0.16 --aa=0.20 --radccc=24 --MPI || exit

# generate reference volume using average volume and variance
../generate_refvols.py defvar/avg.hdf defvar/var.hdf 88.0 || exit

# 3D multi reference alignment
mpirun -np 4 sxali3d_m.py bdb:data rem.hdf ali3d_m --ou=30 --xr='4' --ts='2' --delta='15' --center=1 --nassign=3 --nrefine=1 --ref_a=P --MPI --CTF || exit
