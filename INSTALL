1. Install Required libraries
-----------------------------

    1. fftw, version >= 2.1.3   (http://www.fftw.org/)
       To install fftw from source, use configure options:
       % ./configure --enable-static=no --enable-shared=yes --enable-float --enable-type-prefix

    2. gsl, version >= 1.3,    (http://www.gnu.org/software/gsl/)

2. (Optional) Install Optional Libraries
----------------------------------------
  
    - To enable python support, use
      1. Python (version 2.2+)        (http://www.python.org)
      2. Boost python (version 1.30.2+)    (http://www.boost.org)
         (see "NOTE A" on how to install boost python)
      3. Numerc python Numeric numpy (22.0 +) (http://www.pfdubois.com/numpy)
         
    - To read/write HDF5 image, use hdf5 (http://hdf.ncsa.uiuc.edu/HDF5).

    - To read TIFF image, use libtiff (http://www.libtiff.org)

    - To read PNG image, use PNG (http://www.libpng.org)

3. Quick Installation 
----------------------

    Suppose you have source code eman2.tar.gz
       
       1) install CMake (http://www.cmake.org)

       2) % mkdir -p EMAN/src
          % cd EMAN/src
          % gunzip eman2.tar.gz
          % tar xf eman2.tar
      
       3) % mkdir build
          % cd build

       4) % cmake ../eman2
          % make
          % make install

          
4. Advanced Installation
------------------------

   If your libraries (fftw, gsl, hdf, etc) are not found by Quick
   Installation, or if you want to change the compilation options,
   the following steps help:

       1) follow the first 3 steps in Quick Installation.
       
       2) If your libraries are not installed at the default places,
          set up the related environment variables:
            - fftw -> FFTWDIR
            - gsl  -> GSLDIR
            - tiff -> TIFFDIR
            - png  -> PNGDIR
            - hdf5 -> HDF5DIR
            - python -> PYTHON_ROOT and PYTHON_VERSION
            
       3) % ccmake ../eman2
          - type 'c' if it asks about "CMAKE_BACKWARDS_COMPATIBILITY".
          - make necessary changes for compilation flags.
          - Then type 'c', and type 'g'.
        
       4) % make
          % make install
          
                
Platform Dependent Optimization 
-------------------------------

    In CMake Configuration, enable the following option for your platform:
        - Athlon:  ENABLE_ATHLON
        - Opteron: ENABLE_OPTERON
        - Mac G5:  ENABLE_G5

          
How to Generate Latest Documentation
------------------------------------

   1. install doxygen
   2. run "./makedoc.sh"
    
For Developers Only:
--------------------
    0. For Emacs users, please add the following line to your $HOME/.emacs:
       (setq default-tab-width 4)

    1. EMAN2 use Pyste (http://www.boost.org/libs/python/pyste/) to wrap C++
       into python. Here is the way to install Pyste:

        1) get boost python.
           cd libs/python/pyste/install; python setup.py install
        2) install elementtree
        3) install GCCXML
        4) for boost 1.31.0, apply a patch to pyste ClassExporter.py.
           (Contact Liwei Peng for details.)
           
    2. To generate new boost python wrapper, run
        % cd eman2/libpyEm
        % ./create_boost_python

    3. Windows Installer
       EMAN uses "Nullsoft Scriptable Install System" (http://nsis.sourceforge.net/)
       to generate the windows installer.
       It also uses "HM NIS Edit" (http://hmne.sourceforge.net/) as the editor.

       
How to Install Boost Python
---------------------------
   
    0. Download 'bjam' for your platform.
    
    1. Download boost source from http://www.boost.org. Assume it's boost_1_31_0.
       % cd /usr/local/src; tar zxf boost_1_31_0.tar.gz; cd boost_1_31_0.
    
    2. set up environment variables "PYTHON_ROOT" and "PYTHON_VERSION".
       For example, if your python is at /usr/bin/python. PYTHON_ROOT is
       "/usr". if your python is 2.2.X, PYTHON_VERSION is '2.2'.
    
       a) check your shell: % echo $SHELL
       
       b) if you are using bash/zsh, do
        % export PYTHON_VERSION=2.2
        % export PYTHON_ROOT=/usr

      if you are using csh/tcsh, do
        % setenv PYTHON_VERSION 2.2
        % setenv PYTHON_ROOT /usr

    3. cd libs/python/build
    
    4. run 'bjam' with your options:
       1) linux-x86: % bjam
       2) SGI Irix:  % bjam "-sTOOLS=mipspro"

    5. login as root
    
    6. cp -df bin-stage/libboost_python.so* /usr/local/lib
       cd ../../..; cp -rf boost /usr/local/include


How to use your own python version
----------------------------------

    If the python you want to use in your computer is not found by CMake,
    you may set up environment variables "PYTHON_ROOT" and "PYTHON_VERSION".
    For example, if your python is at /usr/local/python2.4/bin/python.
    PYTHON_ROOT is "/usr/local/python2.4". if your python is 2.4.X,
    PYTHON_VERSION is '2.4'.
       
How to Install Numeric Python
-----------------------------
    - go to web site http://www.pfdubois.com/numpy
    - download Numeric numpy release version 22.0 or above
    - for windows, run the binary installer. that's it.
    - for other platforms, assuming to install Numeric-23.6.tar.gz
    - get source code Numeric-23.6.tar.gz
    - gunzip Numeric-23.6.tar.gz; tar xf Numeric-23.6.tar
    - login as root
    - cd Numeric-23.6; python setup.py install
    
    


       
