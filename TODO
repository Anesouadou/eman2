// TODO List for EMAN2

--- High Priority ---

  003: command-line program logger (.eman2.log)
       We need to adopt a standard history mechanism like in EMAN1. Any
       command-line program should make an entry in a .eman2logfile when it
       starts and another when it completes. In addition to the process id used
       in EMAN1, we should also store some sort of machine identifier (for
       runpar-style processing with a shared filesystem). I think we can drop the
       file storage access lines.

       In general there should be an EMAN2 startup routine called (both python
       and C) as soon as a program gets past the argument parsing. This startup
       routine will handle the logfile thing, and we may use for other tasks
       later on...

  009: build a regression test system to call all the unit tests.

  020: investigate EMAN2 GUI tools: QT PyQT WxPython etc

  042. imageio caching caused problems in some imageio subclasses such that
       the header/data writing are not started from the proper locations. this
       need to be verified and tested on all image formats. one test is:
          - write an image to a file
          - write a new header to this file.
          - write new data to this file.
		  
  051. Transform may has a confusion about post translation and
       pre-translation. Need to verify it.

  057. rotate_translate(): has some problems it seems that the 
	   posttranslate was either treated like pretranslate or ignored...	

  058. CTF classes need more testing for the algorithm implementation.

  066. ImageIO classes: for those supporting 2D stacks, they should also
       support insert/append to a new file, insert/append beyond the end of
       the file. The gap will be filled with zero. Check imagic format as
       an example.

  076. boost python function overloading doesn't work at certain situation.
	   e.g. on mdk9.2, gcc 3.3.1, python 2.3, boost 1.31.0.
	   But the function overloading works at other situations. Need to 
	   figure out why.

  084. Add DEBUG macros at proper places to check array bounds, pointers,
	   etc, for more solid code.

  085. e2proc2d seems not working.

  093. SpiderIO. If an existing image has a single image, then writing to
       it at image index = 0 should overwrite the old image. The current
       implementation check image size and refuse overwriting if different
       sizes. 2) maxim is wrong in 'e2iminfo spider-stack.spi'.
       
--- Low Priority ---

  010: use 'goodf()' to check floating number in FileIO routines.

  011. implement a callback mechanism so that if the image data is changed in
	   memory, the image display GUI can be updated automatically, either from
	   python GUI or C++ GUI.

  012. Implement 3D Convex Mask in image read/write and image processing.
	   ImageIO, Filter, and EMData.
   
  013. ImageIO: read with average/shrink

  014. Filter: Handle image edge in filters nicely

  015. Rotation Euler: return a list of possible angles in an asymmetric unit.
	   refer project3d() for impl

  016. EMData class: get_clip() , get 2D from 3D, 3D from 2D?

  039. make classes Vec3, Matrix3f, Matrix4f as python container classes.  
	   refer indexing_suite in boost python.

  041. many exceptions are not handled properly. e.g., e2iminfo a bad mrc file
       produced a core dump. 
	   
  045. ImageIO region writing are not supported in some imageio classes,
       This includes AMRIRA, VTK.
	   
  048. Add ASCII write and binary read to VtkIO.

  049. EMAN2 source code is based on EMAN1 source code on 08/2004. The new
	   changes in EMAN1 since then need to be integrated into EMAN2.

  062. Windows support. debug build failed with:
	   libpyFilter (debug info exceeds limit);
	   libpyUtils complaining that libpython_d.dll could not be found.
 
  063. to handle large volume (>32 bits), use size_t for nx*ny*nz and
	   data index.

  064. On windows, when there is an exception, e2iminfo prints some garbage
       letters out after the regular error message.

  067. boost python part: compilation failed with python 2.4, boost 1.32.0
	   on IRIX 6.5 with CC MIPSpro Compilers: Version 7.3.1.3m

  068. Windows support. windows file system uses '\' as path separator while
	   unix/linux uses '/'. Need a generic way to make the code portable.


  070. boost python documentation.
	   - The combination dump_BASENAME, BASENAME.get("subclass name") 
		 could be documented in the EMAN2 module help, so that
         >>> help(EMAN2)
         gives a starting point.

  077. In ImageIO region writing, if the region data is in different endian
       order from the original image, the region data needs to be converted
       into the proper endian order.

  087. add [in] [out] or [inout] to params in documentation.

--- Items Done ----

  8/9/04:  001: convert CCTBX flex array to EMData
  
  7/25/04: 002: EMData API: define a generic way to replace the trivial
				get/set() functions.
				
  7/27/04: 004: standardize the Size, Point class using "x", "y", "z" as data
				members. defines index accessing like point[1], point[2], etc.
       
  9/27/04 005: fix place where assuming EMData is only 2D or 3D. 1D is also
			   OK. 4D?
  
  7/27/04: 006: EMData: define a function that can return a sorted list of
				all pixel values above a specified value.

  7/22/04: 007: add a tutorial on how to use boost python 
    			   
  8/10/04: 008: fix bug: EMUtil.dump_filters() in boty python and document.
  
  8/11/04: 017. write a documentation on how to use Filters etc. The doc may be
				generated by a script by passing the code.
		
  7/28/04: 018: change 'spacing_row' to 'apix_x'; 'spacing_col' to 'apix_y';
				'spacing_sec' to 'apix_z'.

  7/30/04: 019: when writing to an existing single-image like mrc, simply overwrite
				it instead of checking its image size to be the same.
	   
  7/31/04: 021: python part doesn't compile sometimes on mandrake 10

  8/7/04:  022. cannot call calc_ccf with 2 args. has to pass the 3rd one				
				as None

  11/14/04 	023. 			
       calc_ccf isn't working properly. It's producing
	   the wrong results, and even more troubling, it seems that it is modifying
	   one of the input images.  a=b.calc_ccf(c,True,None)  modifies c in some
	   way. The result seems to be phase shifted vertically, but not
	   horizontally. Needs a careful look...

  8/3/04:  024: Matrix3f: multiply and division have wrong
				implementation. It shouldn't do element-to-element mult/div.

  8/5/04:  025: EMData get_clip() won't work sometimes.

  8/9/04:  026. EMData: do_ift() has a strange problem. first run works. second run
				fails. both runs are identical. possible reason: fftw cache.
	     
  8/5/04:  027. Geometry: change class Size from only int to IntSize and FloatSize.
				In Region, use float origins and float sizes.

  9/13/04: 028. add region write to ImageIO. The first thing is to change the
				API. The real implementation may come in the future.
  
  8/26/04: 029. use the new log API for entering/exiting functions. i.e., use
				ENTERFUNC and EXITFUNC macros to replace LOGDEBUG("...").
	   
  9/18/04: 030. Filter naming convention change. the most general word go first, ie:
				GaussMask -> MaskGauss
				SharpMask -> MaskSharp
				StdNormalize -> NormalizeStd
				EdgeMeanNormalize -> NormalizeEdgeMean

  9/20/04 031. Fix the documentation for 2 things:
			    1) new logging API;
				2) new filter name conventions.

  2/10/05 032. 
       add actual implementation of region write to ImageIO classes.

  12/10/2004 033.
       in filter parameter passing from python to C++, is there a way to
       pass EMData directly without creating EMObject object. i.e.,
           {"with", EMObject(emdata)} => {"with", emdata}
		   
  10/15/04 035. Add the following to image header documentation:
				CTF 1D and 2D versions
				micrograph id
				particle location in the micrograph
				the last two will be really help to trace back the source of particle.
				for some applications this will be really valuable.

  10/19/04 036. eman2 writing problem. this was caused by improper imageio caching.
				The problem was fixed by fixing the caching mechism and
				fixing some of the imageio subclass read/write routines.
	   
  10/12/04 037. mdk 10.1-related issues. (debug option enabled) 
				  from EMAN2 import *
				  a=EMData()
				  a.read_image("monomer.mrc")
				  a.write_image("z.mrc")
				The output image file size is too small.

				solution: this error couldn't be reproduced.

  10/13/04 038. convert named classes including IntSize, FloatSize, IntPoint,
				FloatPoint to python list in boost python part.

  10/15/04 040. convert named classes including IntSize, FloatSize, IntPoint,
				FloatPoint to python tuple in boost python part.

  10/19/04 043. EMData rotate_translate() does not work. it has segmentation fault
				and any substantial translation seems to cause garbage to appear in
				the data.

  
  10/21/04 044. Many ImageIO class functions have only ENTERFUNC without
				corresponding EXITFUNC. 

  10/20/04 046. ImageIO classes: image_index and is_3d are not used properly in many
				images. e.g., MRC, EM, ICOS, etc.

  10/20/04 047. Replace assert() with error code or exception.

  11/1/04 034. in ImageIO classes, add a way to label images using EMAN1 'name'
			   and set_name().

  11/16/04 049.
      Use exception to replace ImageIO init() error code.

  11/10/04. 050
       EMData::rotate(alt,az,phi) still doesn't work properly. For odd
	   image sizes it produces bad results.  When phi is nonzero, it
	   produces funny scaling operations.

  11/12/04 052
      Write unit tests for basic Vec and Matrix operations. It should
      cover all functions.

  11/14/04 053
       The overloaded binary operators for Vec3<> are not wrapped into
	   boost python. While Matrix3f/Matrix4f's binary operators are wrapped.
	   This may be related to the fact that Vec3<> is a template.
	   
  11/14/04 054
      In ImageIO classes, use Exception to replace the error code checking
      for the following functions: check_read_access(), check_write_access(), 
      check_region().
	  
  11/26/04 055
      write more documentations on how to install eman2 on windows.

  11/16/04 056	  
       MRC write is incorrect for the complex image. it uses
	   16bits instead of 32bits. it was right a few monthes ago.

  11/27/04 059. 
       Find an efficient way to implement EMData's data -> numeric array.
	   		      
  3/2/05 060
       HDFio problem. the read segfault after around 900 reads and the
       write crash after ~400 writes using the same EMData object in python. 
		
  11/20/04 061. 
       Windows support. error libpng12.dll is missing; HDF not working.


  11/29/04 065.
       Find an efficent way to implement numeric array to EMData's data.
	   Both data blocks share the same memory.
		  
  12/20/04 069. 
      rename Transform EMData::get_rotation() const;
	  to get_transform().

  12/14/04 072. 
      Transform::get_rotation() does not work in python.

  12/18/04 073.
      check convertible in type converter functions.

  12/20/04	071.   
     rotation has some errors.
	      rot = Rotation(azi, alt, phi, Rotation.EulerType.EMAN)
		  print azi, rot.eman_az()
		  print alt, rot.eman_alt()
		  print phi, rot.eman_phi()

		  got
		  -0.60170830102 -0.0
		  1.45232928554 0.601708292961
		  0.0 -1.45232927799

  1/2/05 074. 
     Change 'string' to 'const string &' in functions whenever possible.

  1/3/05 075.
       ImageIO::check_read_access(), ImageIO::check_write_access(),
	   float* data should be changed to 'const float* data'. 

  1/3/05 078.
       In e2iminfo, add new fields "ImageEndian" and "HostEndian". Useful
       for debugging endian problems. These fields were only printed when
	   using the -H option.

  1/4/05 079. 
       In ImageIO classes, is_image_big_endian() should run init() first.
	   The same rule applies to other functions. the reason is that init()
	   will read the first block of the image, so that image info  like
	   endian can be returned.
	   
  1/8/05 080. 
       Spider writing seems doesn't work. Need to fix it.

  1/8/05 081.
       rename multi_array_ref<float, 3> to better name like MultiArray3D.

  1/10/05 082. 
       image writing errors. 1) a = EMData.read_images("zz.hed"); for i in
       a; i.write_image("qq.hed", -1). every other image in output is back.
	   2) for in in a: i.write_image("qq.spi", -1) have segmentation fault.
	   
  1/10/05 083. 
       add a new EMObject wrapper around vector<string> type.

  2/10/05 086
       file extension somewhere is "img"/"hed". but somewhere it is ".img"/
       ".hed". make them consistent.
	     
  2/20/05 088. 
       add typeconverter method to convert multi_array from c++ to python.

  2/18/05 089.	   
       convert EMObject to its native type in python side. so a C++
       EMObject(100) will be integer 100 in python.

  2/24/05 090	   
       ImageIO caching causes memory leak or memory not freed. Need a
       better way to handle this.
       
  3/6/05 091.
       CTF: set_ctf() doesn't work using python.

  3/2/05 092. 
       HdfIO: create functions to read/write compound attributes including
       CTF, EulerAngles, etc
 
  	   
	   
